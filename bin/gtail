#!/usr/bin/env ruby
require "rubygems"
require "filewatch/tailglob"
require "filewatch/buftok"
require "optparse"

def main(args)
  with_filenames = true
  exclude_patterns = []

  opts = OptionParser.new do |opts|
    opts.banner = "Usage: #{$0} [options] <path_or_glob> [path_or_glob2] [...]"

    opts.on("-n", "--no-filename", 
            "Supress prefixing of output with file names") do |x|
      with_filenames = false
    end # -n

    opts.on("-x EXCLUDE", "--exclude EXCLUDE",
            "A pattern to ignore. Wildcard/globs accepted." \
            " Can be specified multiple times") do |pattern|
      exclude_patterns << pattern
    end
  end # OptionParser

  opts.parse!(args)

  if args.length == 0
    puts opts.banner
    return 1
  end

  tail = FileWatch::TailGlob.new
  ARGV.each do |path|
    tail.tail(path, :exclude => exclude_patterns)
  end

  buffer = BufferedTokenizer.new
  tail.subscribe do |path, data|
    buffer.extract(data).each do |line|
      if with_filenames
        puts "#{path}: #{line}"
      else
        puts line
      end
    end # buffer.extract
  end # tail.subscribe
end # def main

exit(main(ARGV))
